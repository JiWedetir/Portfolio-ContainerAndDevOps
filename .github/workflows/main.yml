name: 🚀 Deploy website on Tag with Release creation
on:
  push:
    tags:
      - release/*
      - beta/*

jobs:
  build-page:
    name: ⚙️ Build page
    runs-on: ubuntu-latest
    outputs:
      output_prefix: ${{ steps.get-tag-prefix.outputs.var }}
      output_version: ${{ steps.get-tag-version.outputs.var }}
    steps:
      - name: 🚚 Get code from repository
        uses: actions/checkout@v3

      - name: ⚙️ Building web page
        run: |
          pip install mkdocs mkdocs-material
          mkdocs build --site-dir "public/"

      - name: 💾 Storing generated page for later usage
        uses: actions/upload-artifact@v3
        with: 
          name: public-page
          path: public
          retention-days: 0
      
      - name: 📤 Extract Version from Tag
        id: get-tag-version
        env:
          TAG: ${{ github.ref_name }}
        run:
          echo "var=${TAG##*/}" >> "$GITHUB_OUTPUT"
      
      - name: 📤 Extract Prefix from Tag
        id: get-tag-prefix
        env:
          TAG: ${{ github.ref_name }}
        run: |
          echo "The Tag is: '$TAG'"
          if [[ "$TAG" == beta/* ]]
          then
            echo "var=true" >> "$GITHUB_OUTPUT"
          else
            echo "var=false" >> "$GITHUB_OUTPUT"
          fi

  web-deploy:
    name: 🎉 Deploy
    needs: build-page
    runs-on: ubuntu-latest
    steps:
    - name: Set TAG_PREFIX environment variable
      run: |
        echo "Prefix: ${{ needs.build-page.outputs.output_prefix }}"
        echo "TAG_PREFIX=${{ needs.build-page.outputs.output_prefix }}" >> $GITHUB_ENV

    - name: ⬇️ Get generated page
      uses: actions/download-artifact@v3
      with:
        name: public-page
        path: ./public/

    - name: 📂 Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: winweb20.servicehoster.ch
        username: ${{ secrets.ftp_user }}
        password: ${{ secrets.ftp_pass }}
        local-dir: ./public/
        server-dir: ${{ env.TAG_PREFIX == 'true' && './beta/' || './latest/' }}

  create-release:
    name: 🎉 Release
    needs: build-page
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Set TAG_PREFIX & TAG_VERSION environment variable
      run: |
        echo "Prefix: ${{ needs.build-page.outputs.output_prefix }} ; Version: ${{ needs.build-page.outputs.output_version }}"
        echo "TAG_PREFIX=${{ needs.build-page.outputs.output_prefix }}" >> $GITHUB_ENV
        echo "TAG_VERSION=${{ needs.build-page.outputs.output_version }}" >> $GITHUB_ENV

    - name: ⬇️ Get generated page
      uses: actions/download-artifact@v3
      with:
        name: public-page
        path: ./public/

    - name: 🗜️ Create Zip Archive
      run: |
        cd public
        zip -r DevOps-Demo-${{ env.TAG_VERSION }}.zip ./*
      
    - name: 📦 Create Release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.TAG_VERSION }}
        generateReleaseNotes: false
        prerelease: ${{ env.TAG_PREFIX == 'true' }}
        artifacts: public/DevOps-Demo-${{ env.TAG_VERSION }}.zip
